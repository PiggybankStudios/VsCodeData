// Place your key bindings in this file to override the defaults
[
	//+-----------------------------------------------------------------+
	//|                              Extras                             |
	//+-----------------------------------------------------------------+
	
	//+-----------------------------------------------------------------+
	//|                          ctrl+ Commands                         |
	//+-----------------------------------------------------------------+
	// { "key": "ctrl+f1",  "command": "do_nothing" },
	// { "key": "ctrl+f2",  "command": "do_nothing" }, //TODO: Make this a CRC16 calculating hotkey
	{ "key": "ctrl+f3",  "command": "taylorExt.convertNumber", "args": { "from": "dec", "to": "hex" } },
	{ "key": "ctrl+f4",  "command": "taylorExt.convertNumber", "args": { "from": "ascii", "to": "hex", "prefix": "0x" } },
	// { "key": "ctrl+f5",  "command": "do_nothing" },
	// { "key": "ctrl+f6",  "command": "do_nothing" },
	// { "key": "ctrl+f7",  "command": "do_nothing" },
	// { "key": "ctrl+f8",  "command": "do_nothing" },
	// { "key": "ctrl+f9",  "command": "do_nothing" },
	// { "key": "ctrl+f10", "command": "do_nothing" },
	// { "key": "ctrl+f11", "command": "do_nothing" },
	// { "key": "ctrl+f12", "command": "do_nothing" }, //TODO: Make this an open file given by "string" under cursor
	
	{ "key": "ctrl+q",   "command": "do_nothing" }, //TODO: Rebind me!
	{ "key": "ctrl+w",   "command": "workbench.action.closeActiveEditor" },
	{ "key": "ctrl+e",   "command": "workbench.action.reopenClosedEditor" },
	{ "key": "ctrl+r",   "command": "editor.action.deleteLines" },
	//{ "key": "ctrl+t",   "command": "do_nothing" }, //TODO: Make this create/uncreate header syntax
	//{ "key": "ctrl+y",   "command": "do_nothing" }, //TODO: Make this print out syntax information at the cursor's location
	{ "key": "ctrl+u",   "command": "editor.action.transformToUppercase" },
	{ "key": "ctrl+i",   "command": "editor.foldRecursively" }, //TODO: Make this fold at the same indentation as the cursor
	{ "key": "ctrl+o",   "command": "editor.unfold" }, //TODO: Make this look ahead to the next folded region
	{ "key": "ctrl+p",   "command": "workbench.action.quickOpen" },
	{ "key": "ctrl+[",   "command": "editor.action.outdentLines", "when": "editorTextFocus && !editorReadonly" },
	{ "key": "ctrl+]",   "command": "editor.action.indentLines", "when": "editorTextFocus && !editorReadonly" },
	{ "key": "ctrl+\\",  "command": "workbench.action.editorLayoutTwoColumns" },
	
	{ "key": "ctrl+a",   "command": "expandLineSelection", "when": "textInputFocus" },
	{ "key": "ctrl+s",   "command": "workbench.action.files.save" },
	{ "key": "ctrl+d",   "command": "editor.action.addSelectionToNextFindMatch", "when": "editorFocus" },
	{ "key": "ctrl+f",   "command": "actions.find", "when": "editorFocus || editorIsOpen" },
	//{ "key": "ctrl+g",   "command": "do_nothing" }, //TODO: Make this a google search hotkey
	//{ "key": "ctrl+h",   "command": "do_nothing" }, //TODO: Make this open the paired .c or .h file
	{ "key": "ctrl+j",   "command": "do_nothing" }, //TODO: Rebind me!
	{ "key": "ctrl+k",   "command": "do_nothing" }, //TODO: Rebind me!
	//{ "key": "ctrl+l",   "command": "do_nothing" }, //TODO: Make this collapse curly braces to single line or expand to multi-line
	//{ "key": "ctrl+;",   "command": "do_nothing" }, //TODO: Make this a custom "Taylor" command
	{ "key": "ctrl+'",   "command": "workbench.debug.action.toggleRepl", "when": "workbench.panel.repl.view.active" },
	
	{ "key": "ctrl+z",   "command": "undo" },
	{ "key": "ctrl+x",   "command": "editor.action.clipboardCutAction" },
	{ "key": "ctrl+c",   "command": "editor.action.clipboardCopyAction" },
	{ "key": "ctrl+v",   "command": "editor.action.clipboardPasteAction" },
	{ "key": "ctrl+b",   "command": "workbench.action.tasks.build" },
	{ "key": "ctrl+n",   "command": "workbench.action.files.newUntitledFile" },
	{ "key": "ctrl+m",   "command": "do_nothing" }, //TODO: Rebind me!
	{ "key": "ctrl+,",   "command": "workbench.action.navigateBack" },
	{ "key": "ctrl+.",   "command": "workbench.action.navigateForward" },
	{ "key": "ctrl+/",   "command": "editor.action.commentLine" },
	
	// { "key": "ctrl+insert",   "command": "do_nothing" },
	// { "key": "ctrl+delete",   "command": "do_nothing" },
	// { "key": "ctrl+home",     "command": "do_nothing" },
	// { "key": "ctrl+end",      "command": "do_nothing" },
	// { "key": "ctrl+pageup",   "command": "do_nothing" },
	// { "key": "ctrl+pagedown", "command": "do_nothing" },
	
	{ "key": "ctrl+up",    "command": "cursorMove", "args": { "to": "prevBlankLine" } }, //TODO: Make this select the end of the line (after indentation) rather than the beginning
	{ "key": "ctrl+down",  "command": "cursorMove", "args": { "to": "nextBlankLine" } }, //TODO: Make this select the end of the line (after indentation) rather than the beginning
	{ "key": "ctrl+left",  "command": "cursorWordLeft", "when": "textInputFocus && !accessibilityModeEnabled" },
	{ "key": "ctrl+right", "command": "cursorWordRight", "when": "textInputFocus && !accessibilityModeEnabled" },
	
	// { "key": "ctrl+escape",    "command": "do_nothing" },
	// { "key": "ctrl+backspace", "command": "do_nothing" },
	// { "key": "ctrl+enter",     "command": "do_nothing" },
	// { "key": "ctrl+pause",     "command": "do_nothing" },
	{ "key": "ctrl+tab",       "command": "workbench.action.toggleZenMode" },
	{ "key": "ctrl+space",     "command": "taylorExt.scrollToCursor" },
	// { "key": "ctrl+clear",     "command": "do_nothing" },
	
	//+-----------------------------------------------------------------+
	//|                       ctrl+shift+ Commands                      |
	//+-----------------------------------------------------------------+
	// { "key": "ctrl+shift+q",   "command": "do_nothing" },
	// { "key": "ctrl+shift+w",   "command": "do_nothing" },
	// { "key": "ctrl+shift+e",   "command": "do_nothing" },
	// { "key": "ctrl+shift+r",   "command": "do_nothing" }, //TODO: Make this "replace with spaces" style kill command
	// { "key": "ctrl+shift+t",   "command": "do_nothing" }, //TODO: Make this create/uncreate large header command
	// { "key": "ctrl+shift+y",   "command": "do_nothing" },
	{ "key": "ctrl+shift+u",   "command": "editor.action.transformToLowercase" },
	{ "key": "ctrl+shift+i",   "command": "editor.foldAll", "when": "editorTextFocus && foldingEnabled" }, //TODO: Make this fold things ONLY at the same level rathar than just "Fold All"
	// { "key": "ctrl+shift+o",   "command": "do_nothing" }, //TODO: Make this an "open previous fold" command
	// { "key": "ctrl+shift+p",   "command": "do_nothing" },
	// { "key": "ctrl+shift+[",   "command": "do_nothing" },
	// { "key": "ctrl+shift+]",   "command": "do_nothing" },
	{ "key": "ctrl+shift+\\",  "command": "workbench.action.editorLayoutSingle" },
	
	{ "key": "ctrl+shift+a",   "command": "editor.action.selectAll" },
	// { "key": "ctrl+shift+s",   "command": "do_nothing" },
	{ "key": "ctrl+shift+d",   "command": "editor.action.addSelectionToPreviousFindMatch", "when": "editorFocus" }, //TODO: Make this work when we have multiple selections already in opposite direction??
	{ "key": "ctrl+shift+f",   "command": "workbench.action.findInFiles" },
	// { "key": "ctrl+shift+g",   "command": "do_nothing" }, //TODO: Make this a google search command the deletes the selected text at the same time
	// { "key": "ctrl+shift+h",   "command": "do_nothing" }, //TODO: Make this a file header generating command
	// { "key": "ctrl+shift+j",   "command": "do_nothing" },
	// { "key": "ctrl+shift+k",   "command": "do_nothing" },
	// { "key": "ctrl+shift+l",   "command": "do_nothing" },
	// { "key": "ctrl+shift+;",   "command": "do_nothing" },
	// { "key": "ctrl+shift+'",   "command": "do_nothing" },
	
	{ "key": "ctrl+shift+z",   "command": "redo" },
	// { "key": "ctrl+shift+x",   "command": "do_nothing" },
	{ "key": "ctrl+shift+c",   "command": "editor.action.duplicateSelection" },
	// { "key": "ctrl+shift+v",   "command": "do_nothing" },
	// { "key": "ctrl+shift+b",   "command": "do_nothing" },
	// { "key": "ctrl+shift+n",   "command": "do_nothing" },
	// { "key": "ctrl+shift+m",   "command": "do_nothing" },
	// { "key": "ctrl+shift+,",   "command": "do_nothing" },
	// { "key": "ctrl+shift+.",   "command": "do_nothing" },
	// { "key": "ctrl+shift+/",   "command": "do_nothing" },
	
	{ "key": "ctrl+shift+up",    "command": "cursorMove", "args": { "to": "prevBlankLine", "select": true } },
	{ "key": "ctrl+shift+down",  "command": "cursorMove", "args": { "to": "nextBlankLine", "select": true } },
	
	//+-----------------------------------------------------------------+
	//|                          alt+ Commands                          |
	//+-----------------------------------------------------------------+
	{ "key": "alt+s",   "command": "editor.action.nextSelectionMatchFindAction", "when": "editorFocus" },
	
	//+-----------------------------------------------------------------+
	//|                       alt+shift+ Commands                       |
	//+-----------------------------------------------------------------+
	
	//+-----------------------------------------------------------------+
	//|                        ctrl+alt+ Commands                       |
	//+-----------------------------------------------------------------+
	{ "key": "ctrl+alt+s",   "command": "workbench.action.toggleSidebarVisibility" }
	
	//+-----------------------------------------------------------------+
	//|                     ctrl+alt+shift+ Commands                    |
	//+-----------------------------------------------------------------+
	
	//+-----------------------------------------------------------------+
	//|                       Contextual Bindings                       |
	//+-----------------------------------------------------------------+
]